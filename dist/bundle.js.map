{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/main.js"],"names":[],"mappingsfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\n$.ajax({\n  url: \"songs.json\"\n}).done(function(cont) {\n  populateDOM(cont);\n});\n\nfunction populateDOM(cont) {\n  for (var i = 0; i < cont.songs.length; i++) {\n    var songItem = cont.songs[i];\n    $(\"#inputSongs\").append(\n      `<div class=\"songList\"> \n      <div class=\"title\">  ${songItem.title}  </div> \n      <div class=\"artist\">  ${songItem.artist}  </div> \n      <div class=\"album\"> ${songItem.album}  </div>\n      <button class=\"deletebutton\">Delete It</button> \n    </div>`);\n  }\n}\n\n\n$(\"#inputSongs\").on(\"click\", \".deletebutton\", function(event) {\n  $(this).parent().remove();\n});\n\n\n// $(\"#addSongs\").click(addSecondJSONfile);\n\n// calling populateDOM happened at end of ajax call, in promises it happens at the call site\n\n// function addSecondJSONfile() {\n//   $.ajax({\n//     url: \"songs2.json\"\n//   }).done(function(moreSongs){\n//     populateDOM(moreSongs);\n//   });\n// }\n\n// promises created to allow to deal with results of ajax calls at call site\n// for managing entire chain of functions from one spot\n// promises are used to make code more managable\n$(\"#addSongs\").click(function() {\n  addSecondJSONfile()\n    .then(function(moreSongs) {\n      populateDOM(moreSongs);\n    })\n})\n\nvar addSecondJSONfile = function() {\n  return new Promise((resolve, reject) => {\n    $.ajax({\n      url: \"songs2.json\"\n    }).done(function(moreSongs) {\n      resolve(moreSongs);\n      // after resolve then gets access to moreSongs\n      // \"then\" is a function that sets up event listeners\n      // waiting for resolve to get called\n    }).fail(function(xhr, status, error) {});\n  });\n};\n\n\n//   })\n// }\n\n// PROMISES FROM ACME:\n\n// var getCategories = function() {\n//   return new Promise((resolve, reject) => {\n//     $.ajax({\n//       url: \"json/categories.json\"\n//     }).done(function(data) {\n//       resolve(data);\n//     }).fail(function(xhr, status, error) {\n//       reject(error);\n//     });\n//   })\n// };\n\n// getCategories()\n// .then(function(catData) {\n//   // then is a method on \n//   explosiveData.push(catData.categories);\n//   // array and function return second funciton\n//   // console.log(\"categoriesPromise\", catData);\n//   return getTypes();\n// }).then(function(typeData) {\n//   explosiveData.push(typeData.types);\n//   // console.log(\"getTypes\", typeData)\n//   return getProducts();\n// }).then(function(prodData) {\n//   explosiveData.push(prodData.products);\n//   // console.log(\"getProducts\", prodData)\n//   // console.log(explosiveData[0]);\n//   loadCategoriesPage();\n// });\n"]}